@page
@model Mwh.Sample.Web.Pages.EmployeeRazor.DetailsModel

@{
    ViewData["Title"] = $"Employee Details - {Model.Employee.Name} | ASP.NET Core Razor Pages";
    ViewData["Description"] = $"View detailed information for employee {Model.Employee.Name} using Razor Pages in ASP.NET Core. Understand the employee's role and department.";
    ViewData["Keywords"] = "ASP.NET Core, Razor Pages, Employee Details, employee management, Razor Pages tutorial, MVC vs Razor Pages";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-body">
            <h2 class="card-title text-center">Employee Details - @Model.Employee.Name</h2>
            <hr />
            <dl class="row">
                <dt class="col-sm-3 text-muted">@Html.DisplayNameFor(model => model.Employee.Name)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Employee.Name)</dd>

                <dt class="col-sm-3 text-muted">@Html.DisplayNameFor(model => model.Employee.Gender)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Employee.Gender)</dd>

                <dt class="col-sm-3 text-muted">@Html.DisplayNameFor(model => model.Employee.Age)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Employee.Age)</dd>

                <dt class="col-sm-3 text-muted">@Html.DisplayNameFor(model => model.Employee.Country)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Employee.Country)</dd>

                <dt class="col-sm-3 text-muted">Department</dt>
                <dd class="col-sm-9">@(Model.Employee.Department?.Name ?? "N/A")</dd>

                <dt class="col-sm-3 text-muted">@Html.DisplayNameFor(model => model.Employee.State)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Employee.State)</dd>

                <dt class="col-sm-3 text-muted">@Html.DisplayNameFor(model => model.Employee.ManagerId)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Employee.ManagerId)</dd>
            </dl>
            <div class="d-flex justify-content-center mt-4">
                <a asp-page="./Edit" asp-route-id="@Model.Employee?.Id" class="btn btn-primary me-3">Edit</a>
                <a asp-page="./Index" class="btn btn-secondary">Back to List</a>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-body">
            <h3 class="card-title">Understanding Razor Pages for Employee Details</h3>
            <p class="card-text">
                Razor Pages provide a streamlined way to handle UI and data binding in a single file. This page displays detailed information about the selected employee using a page model and view components.
                Razor Pages simplify the development process by keeping logic close to the page, making it easier to maintain and understand.
            </p>
            <h4 class="card-title">Best Practices:</h4>
            <ul class="list-group list-group-flush">
                <li class="list-group-item"><strong>Use ViewModels:</strong> Avoid exposing entities directly to the view to keep data structures clean and secure.</li>
                <li class="list-group-item"><strong>Leverage Tag Helpers:</strong> Use Tag Helpers for cleaner and more readable Razor markup.</li>
                <li class="list-group-item"><strong>Validation:</strong> Implement proper validation to ensure data integrity.</li>
            </ul>
        </div>
    </div>
</div>
