@{
    ViewBag.Title = "Employee Management with MVC and JQuery AJAX | ASP.NET MVC Tutorial";
    ViewBag.MetaDescription = "Learn how to manage employees using MVC and JQuery AJAX for CRUD operations in ASP.NET MVC. Explore the benefits and drawbacks of this approach, including code implementation and best practices.";
    ViewBag.MetaKeywords = "ASP.NET MVC, JQuery AJAX, CRUD operations, MVC Forms, employee management, MVC tutorial, partial views, API endpoints";
}
<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-body">
            <h2 class="card-title text-center">Employee Management with MVC and JQuery AJAX</h2>
            <p class="text-muted text-center">
                Manage employees efficiently using a single index view with modal forms for Create, Read, Update, and Delete (CRUD) operations. This approach leverages MVC architecture, JQuery AJAX, and partial views for a seamless user experience.
            </p>
            <p class="text-center">
                <a href="#" class="btn btn-primary" onclick="return loadEmployeeEdit('0')">Add New Employee</a>
                <a href="#" class="btn btn-info" onclick="return loadEmployeeList()">Reload List</a>
            </p>
            <div id="content-employeelist"></div>
        </div>
    </div>

    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div id="modalContent" class="modal-content"></div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-body">
            <h3 class="card-title">How This Approach Works</h3>
            <p class="card-text">
                In this implementation, the main <strong>Index.cshtml</strong> view displays the list of employees. All CRUD operations are handled via AJAX calls to controller endpoints that render partial views in modals.
                These partial views serve as sub-forms for creating, editing, and deleting employee records, making the interaction dynamic without full-page reloads.
            </p>
            <h4>Code Implementation:</h4>
            <ul>
                <li><strong>Partial Views:</strong> Separate partial views for create, edit, and delete operations.</li>
                <li><strong>API Endpoints:</strong> Controller actions handle AJAX requests, returning partial views or JSON results for CRUD operations.</li>
                <li><strong>JavaScript Functions:</strong> Functions trigger modal displays, submit data via AJAX, and update the main view dynamically.</li>
            </ul>
            <h4>Pros of This Approach:</h4>
            <ul>
                <li><strong>Improved UX:</strong> Seamless updates and dynamic forms enhance user experience.</li>
                <li><strong>Single View Management:</strong> All operations are managed from a single index view, reducing navigation.</li>
                <li><strong>Reduced Server Load:</strong> Only necessary data is exchanged, minimizing server load and page refreshes.</li>
            </ul>
            <h4>Cons of This Approach:</h4>
            <ul>
                <li><strong>Complexity:</strong> Requires a solid understanding of JavaScript, AJAX, and MVC to implement and maintain.</li>
                <li><strong>Debugging Challenges:</strong> More difficult to debug due to asynchronous calls and partial view rendering.</li>
                <li><strong>SEO Limitations:</strong> Content loaded via AJAX is not directly visible to search engines, potentially affecting SEO.</li>
            </ul>
        </div>
    </div>
</div>






@section scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            loadEmployeeList();
        });

        //Load Employee List
        function loadEmployeeList() {
            $('#myModal').modal('hide');
            $.ajax({
                url: '/Employee/GetEmployeeList',
                type: 'get',
                dataType: 'html',
                success: function (data) {
                    $("#content-employeelist").html(data);
                    $("#content-employeelist").fadeIn();
                },
                error: function (errormessage) { alert(errormessage.responseText); }
            })
        };

        //Load Employee Edit
        function loadEmployeeEdit(EmpID) {
            $.ajax({
                url: '/Employee/GetEmployeeEdit/' + EmpID,
                type: 'get',
                dataType: 'html',
                success: function (data) {
                    $("#modalContent").html(data);
                    $('#myModal').modal('show');
                    $('#btnUpdate').show();
                    $('#btnAdd').hide();
                },
                error: function (errormessage) { alert(errormessage.responseText); }
            })
        };

        //Load Employee Delete
        function loadEmployeeDelete(EmpID) {
            $.ajax({
                url: '/Employee/GetEmployeeDelete/' + EmpID,
                type: 'get',
                dataType: 'html',
                success: function (data) {
                    $("#modalContent").html(data);
                    $('#myModal').modal('show');
                    $('#btnUpdate').show();
                    $('#btnAdd').hide();
                },
                error: function (errormessage) { alert(errormessage.responseText); }
            })
        };

        function SaveEmployee(id) {
            var empId = +$('#id').val();
            var depId = +$('#Department').val();
            var genderId = +$('#Gender').val();
            var ageId = +$('#Age').val();

            var employee = {
                id: empId,
                name: $('#Name').val(),
                gender: genderId,
                age: ageId,
                state: $('#State').val(),
                country: $('#Country').val(),
                department: depId
            };

            var jsonEmpObj = JSON.stringify(employee)

            if (id === 0)
            {
                AddEmployee(jsonEmpObj);
            }
            else
            {
                UpdateEmployee(id, jsonEmpObj);
            }
        }

        function AddEmployee(jsonEmpObj) {
            $.ajax({
                url: '/Employee/',
                data: jsonEmpObj,
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    loadEmployeeList();
                    $('#myModal').modal('hide');
                },
                error: function (errormessage) { 
                    alert(errormessage.responseText); 
                    loadEmployeeList();
                    $('#myModal').modal('hide');
                }
            });
        }

        function UpdateEmployee(id, jsonEmpObj) {
            $.ajax({
                url: '/Employee/' + id,
                data: jsonEmpObj,
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    loadEmployeeList();
                    $('#myModal').modal('hide');
                },
                error: function (errormessage) { 
                    alert(errormessage.responseText); 
                    loadEmployeeList();
                    $('#myModal').modal('hide');
                },
            });
        }

        function DeleteEmployee(id) {
            $.ajax({
                url: '/Employee/' + id,
                type: 'delete',
                dataType: 'html',
                success: function (data) {
                    loadEmployeeList();
                },
                error: function (errormessage) { alert(errormessage.responseText); }
            });
        }
    </script>
}