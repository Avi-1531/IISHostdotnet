@{
    ViewBag.Title = "ASP.NET MVC CRUD Single Page Application | JavaScript AJAX Tutorial";
    ViewBag.MetaDescription = "Learn how to create a Single Page Application (SPA) using JavaScript AJAX with ASP.NET MVC. This tutorial demonstrates how to implement CRUD operations with seamless updates.";
    ViewBag.MetaKeywords = "ASP.NET MVC, Single Page Application, SPA, JavaScript AJAX, CRUD tutorial, MVC AJAX CRUD, API integration, ASP.NET tutorial";
}
<div class="container">
    <h2>JavaScript AJAX using Api</h2>
    <table id="EmpSinglePage" class="table table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Profile</th>
                <th>Name</th>
                <th>Gender</th>
                <th>Age</th>
                <th>State</th>
                <th>Country</th>
                <th>Department</th>
                <th>Action</th>
            </tr>
        </thead>
        <tfoot></tfoot>
    </table>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Add Employee</h4>
                <button type="button" style="float:right;" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="name">Name</label>
                        <input type="text" class="form-control" id="name" placeholder="name" />
                    </div>
                    <div class="form-group">
                        <label for="genderName">Gender</label>
                        <input type="text" class="form-control" id="genderName" placeholder="genderName" />
                    </div>
                    <div class="form-group">
                        <label for="age">Age</label>
                        <input type="number" class="form-control" id="age" placeholder="age" />
                    </div>
                    <div class="form-group">
                        <label for="state">State</label>
                        <input type="text" class="form-control" id="state" placeholder="state" />
                    </div>
                    <div class="form-group">
                        <label for="country">Country</label>
                        <input type="text" class="form-control" id="country" placeholder="country" />
                    </div>
                    <div class="form-group">
                        <label for="department">Department</label>
                        <input type="number" class="form-control" id="department" placeholder="department" />
                    </div>
                    <input type="hidden" id="id" value="0" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnAdd" onclick="return Add();">Add</button>
                <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="Update();">Update</button>
                <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<div class="container">
    <h3>About This Page</h3>
    <p>
        This page is part of an ASP.NET MVC tutorial that showcases how to build dynamic and responsive web applications using AJAX and JavaScript.
        It allows you to interact with the API to manage employee data efficiently, providing a seamless user experience without full page reloads.
    </p>
    <h4>Key Features:</h4>
    <ul>
        <li>
            Dynamic data loading using AJAX:
            <pre><code class="language-javascript">
$.ajax({
    url: "/api/employee",
    type: "GET",
    contentType: "application/json;charset=utf-8",
    dataType: "json",
    success: function (result) {
        $('#EmpSinglePage').DataTable({
            data: result,
            columns: [
                { data: 'profile_picture' },
                { data: 'name' },
                { data: 'genderName' },
                { data: 'age' },
                { data: 'state' },
                { data: 'country' },
                { data: 'departmentName' },
                { data: 'id' }
            ]
        });
    },
    error: function (errormessage) {
        alert(errormessage.responseText);
    }
});
            </code></pre>
        </li>
        <li>
            Adding a new employee with AJAX:
            <pre><code class="language-javascript">
const Add = () => {
    var employee = {
        id: +$('#id').val(),
        name: $('#name').val(),
        age: +$('#age').val(),
        state: $('#state').val(),
        country: $('#country').val(),
        department: +$('#department').val()
    };
    $.ajax({
        url: "/api/employee",
        data: JSON.stringify(employee),
        type: "POST",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function () {
            loadData();
            $('#myModal').modal('hide');
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
};
            </code></pre>
        </li>
        <li>
            Updating an existing employee with AJAX:
            <pre><code class="language-javascript">
const Update = () => {
    var employee = {
        id: +$('#id').val(),
        name: $('#name').val(),
        age: +$('#age').val(),
        state: $('#state').val(),
        country: $('#country').val(),
        department: +$('#department').val()
    };
    $.ajax({
        url: "/api/employee/" + employee.id,
        data: JSON.stringify(employee),
        type: "PUT",
        contentType: "application/json;charset=utf-8",
        dataType: "json",
        success: function () {
            loadData();
            $('#myModal').modal('hide');
        },
        error: function (errormessage) {
            alert(errormessage.responseText);
        }
    });
};
            </code></pre>
        </li>
    </ul>
    <p>
        This example serves as a great starting point for building more complex SPAs with robust client-side interactions. By using AJAX for CRUD operations, we achieve a more responsive and interactive user experience.
    </p>
</div>
<div class="container">
    <h3>Pros and Cons of Using JavaScript AJAX in ASP.NET MVC</h3>
    <h4>Pros:</h4>
    <ul>
        <li><strong>Improved User Experience:</strong> AJAX allows seamless data updates without refreshing the entire page, providing a more responsive and interactive user interface.</li>
        <li><strong>Reduced Server Load:</strong> Only the necessary data is sent back and forth, reducing the load on the server and network bandwidth usage.</li>
        <li><strong>Modular Code Structure:</strong> The separation of concerns between client-side and server-side code makes the application more maintainable and scalable.</li>
        <li><strong>Dynamic Content Loading:</strong> Enables the ability to dynamically load and update specific parts of a webpage, such as tables or forms, based on user interactions.</li>
    </ul>

    <h4>Cons:</h4>
    <ul>
        <li><strong>Increased Complexity:</strong> The combination of client-side and server-side logic can become complex and harder to debug, especially with large-scale applications.</li>
        <li><strong>SEO Limitations:</strong> Content loaded dynamically through AJAX is not easily indexed by search engines, which can impact the SEO performance of the website.</li>
        <li><strong>JavaScript Dependency:</strong> The functionality heavily relies on JavaScript, which can be a limitation if users disable JavaScript in their browsers.</li>
        <li><strong>Security Concerns:</strong> Improper implementation of AJAX can expose the application to security vulnerabilities like Cross-Site Scripting (XSS) or Cross-Site Request Forgery (CSRF).</li>
    </ul>
</div>


@section scripts {
    <script type="text/javascript">
        $(document).ready(function() {
            loadData();
        });

        const loadData = () => {
            $.ajax({
                url: "/api/employee",
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function(result) {
                    // Initialize DataTables
                    $('#EmpSinglePage').DataTable({
                        data: result,
                        destroy: true,
                        paging: false, // Disable paging
                        scrollY: '50vh', // Set the height for vertical scrolling
                        stateSave: true, // Enable state saving
                        colReorder: true, // Enable column reordering
                        columns: [
                            {
                                data: 'profile_picture',
                                render: function(data, type, row) {
                                    return '<img src="/images/' + data + '" class="rounded-circle" height="40" width="40" asp-append-version="true" />';
                                }
                            },
                            { data: 'name' },
                            { data: 'genderName' },
                            { data: 'age' },
                            { data: 'state' },
                            { data: 'country' },
                            { data: 'departmentName' },
                            {
                                data: 'id',
                                render: function(data, type, row) {
                                    return '<a href="#" class="btn btn-primary" onclick="return getEmployeeByID(' + data + ')">Edit</a> <a href="#" class="btn btn-warning" onclick="Delete(' + data + ')">Delete</a>';
                                }
                            }
                        ]
                    });
                },
                error: function(errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        //Show Add Employee Dialog
        const Add = () => {
            var res = validate();
            if (res == false) {
                return false;
            }
            var empId = +$('#id').val();
            var depId = +$('#department').val();
            var ageId = +$('#age').val();

            var employee = {
                id: empId,
                name: $('#name').val(),
                age: ageId,
                state: $('#state').val(),
                country: $('#country').val(),
                department: depId
            };

            var jsonEmpObj = JSON.stringify(employee)

            $.ajax({
                url: "/api/employee",
                data: jsonEmpObj,
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function(result) {
                    loadData();
                    $('#myModal').modal('hide');
                },
                error: function(errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        // Get Employee based on Employee ID
        const getEmployeeByID = (EmpID) => {
            $('#name').css('border-color', 'lightgrey');
            $('#age').css('border-color', 'lightgrey');
            $('#state').css('border-color', 'lightgrey');
            $('#country').css('border-color', 'lightgrey');
            $.ajax({
                url: "/api/employee/" + EmpID,
                typr: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function(result) {
                    $('#id').val(result.resource.id);
                    $('#name').val(result.resource.name);
                    $('#gender').val(result.resource.gender);
                    $('#age').val(result.resource.age);
                    $('#state').val(result.resource.state);
                    $('#country').val(result.resource.country);
                    $('#department').val(result.resource.department);

                    $('#myModalLabel').html('Update Employee');

                    $('#myModal').modal('show');
                    $('#btnUpdate').show();
                    $('#btnAdd').hide();
                },
                error: function(errormessage) {
                    alert(errormessage.responseText);
                }
            });
            return false;
        }

        // Update existing Employee record
        const Update = () => {
            var res = validate();
            if (res == false) {
                return false;
            }
            var empId = +$('#id').val();
            var depId = +$('#department').val();
            var ageId = +$('#age').val();

            var employee = {
                id: empId,
                name: $('#name').val(),
                age: ageId,
                state: $('#state').val(),
                country: $('#country').val(),
                department: depId
            };
            $.ajax({
                url: "/api/employee/" + empId,
                data: JSON.stringify(employee),
                type: "PUT",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function(result) {
                    loadData();
                    $('#myModalLabel').html('Add Employee');
                    $('#myModal').modal('hide');
                    $('#id').val("0");
                    $('#name').val("");
                    $('#gender').val("");
                    $('#age').val("");
                    $('#state').val("");
                    $('#country').val("");
                    $('#department').val("");
                },
                error: function(errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        // Delete Employee by Employee ID
        const Delete = (ID) => {
            var ans = confirm("Are you sure you want to delete this Record?");
            if (ans) {
                $.ajax({
                    url: "/api/employee/" + ID,
                    type: "DELETE",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    success: function(result) {
                        loadData();
                    },
                    error: function(errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
        }

        // Clear the Employee Form
        const clearTextBox = () => {
            $('#myModalLabel').html('Add Employee');
            $('#id').val("0");
            $('#name').val("");
            $('#gender').val("");
            $('#age').val("");
            $('#state').val("");
            $('#country').val("");
            $('#department').val("");
            $('#btnUpdate').hide();
            $('#btnAdd').show();
            $('#name').css('border-color', 'lightgrey');
            $('#age').css('border-color', 'lightgrey');
            $('#state').css('border-color', 'lightgrey');
            $('#country').css('border-color', 'lightgrey');
            $('#department').css('border-color', 'lightgrey');
        }
        // JQuery Validate
        const validate = () => {
            var isValid = true;
            if ($('#name').val().trim() == "") {
                $('#name').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#name').css('border-color', 'lightgrey');
            }
            if ($('#age').val().trim() == "") {
                $('#age').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#age').css('border-color', 'lightgrey');
            }
            if ($('#state').val().trim() == "") {
                $('#state').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#state').css('border-color', 'lightgrey');
            }
            if ($('#country').val().trim() == "") {
                $('#country').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#country').css('border-color', 'lightgrey');
            }
            if ($('#department').val().trim() == "") {
                $('#department').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#department').css('border-color', 'lightgrey');
            }
            return isValid;
        }

    </script>
    <!-- Include the DataTables ColReorder extension -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/colreorder/1.5.4/css/colReorder.dataTables.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/colreorder/1.5.4/js/dataTables.colReorder.min.js"></script>
}
